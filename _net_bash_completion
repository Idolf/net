# Only run if `net` is installed

if ! which net > /dev/null ; then
    echo "The net tool is not installed" >&2
    return
fi

# cache list of connections
_net_init()
{
    local IFS
    IFS=$'\n'
    _net_connections=($(net --internal-list-all))
}

_net_init

_net()
{
    COMPREPLY=()
    local IFS cur prev opts word code
    IFS=$'\n'
    cur="${COMP_WORDS[COMP_CWORD]}"
    fst="${COMP_WORDS[1]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts=(--help --iface= --config= --verbose --no-vpn)
    _net_connections+=($(net --internal-scan-cache))

    # the first argument is a command
    if [ $COMP_CWORD == 1 ] ; then
        opts+=(list scan connect stop dns mac dns vpn)
    fi

    if [ "${prev}" == "connect" ] ; then
        COMPREPLY=( $(compgen -W "$(printf "%s\n" "${_net_connections[@]}")" -- ${cur}) )
        return 0
    fi

    if [ "${prev}" == "stop" ] ; then
        COMPREPLY=( $(compgen -W "$(net --internal-list-up)" -- ${cur}) )
        return 0
    fi

    if [ "${prev}" == "mac" ] || [ "${prev}" == "dns" ] ; then
        return 1
    fi

    if [ "${prev}" == "vpn" ] ; then
       COMPREPLY=( $(compgen -W "$(net --internal-list-vpn)" -- ${cur}) )
       return 0
    fi
    if [ "${fst}" == "vpn" ] && [ $COMP_CWORD == 3 ] ; then
       COMPREPLY=( $(compgen -W stop -- ${cur}) )
       return 0
    fi

    # check if a connection was already chosen
    for word in "${COMP_WORDS[@]}" ; do
        for conn in ${_net_connections} ; do
            if [ "${word}" == "${conn}" ] ; then
                COMPREPLY=( $(compgen -W "$(printf "%s\n" "${opts[@]}")" -- ${cur}) )
                return 0
            fi
        done
    done

    opts+=("$(printf "%s\n" "${_net_connections[@]}")")
    COMPREPLY=( $(compgen -W "$(printf "%s\n" "${opts[@]}")" -- ${cur}) )
}

complete -F _net net
